{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/loggingoption\/init(policy:scope:)","title":"init(policy: LoggerBundler.LoggingPolicy, scope: LoggerBundler.LoggerScope?)","type":"init"}],"path":"\/documentation\/parchment\/loggerbundler\/loggingoption","title":"LoggerBundler.LoggingOption","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/init(components:buffer:bufferflowcontroller:mutations:)","title":"init(components: [LoggerComponent], buffer: some LogBuffer, bufferFlowController: some BufferFlowController, mutations: [Mutation])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/add(component:)","title":"func add(component: LoggerComponent)","type":"method"},{"path":"\/documentation\/parchment\/loggerbundler\/add(mutations:)","title":"func add(mutations: [Mutation])","type":"method"},{"path":"\/documentation\/parchment\/loggerbundler\/send(_:with:)","title":"func send(some Loggable, with: LoggerBundler.LoggingOption) async","type":"method"},{"path":"\/documentation\/parchment\/loggerbundler\/send(event:with:)-3l6su","title":"func send(event: TrackingEvent, with: LoggerBundler.LoggingOption) async","type":"method"},{"path":"\/documentation\/parchment\/loggerbundler\/send(event:with:)-4ij7q","title":"func send(event: [PartialKeyPath<Loggable> : Sendable], with: LoggerBundler.LoggingOption) async","type":"method"},{"path":"\/documentation\/parchment\/loggerbundler\/startlogging()","title":"func startLogging() -> Task<Void, Error>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/loggerscope\/exclude(_:)","title":"case exclude([LoggerComponentID])","type":"case"},{"path":"\/documentation\/parchment\/loggerbundler\/loggerscope\/only(_:)","title":"case only([LoggerComponentID])","type":"case"}],"path":"\/documentation\/parchment\/loggerbundler\/loggerscope","title":"LoggerBundler.LoggerScope","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/loggingpolicy\/bufferingfirst","title":"case bufferingFirst","type":"case"},{"path":"\/documentation\/parchment\/loggerbundler\/loggingpolicy\/immediately","title":"case immediately","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggerbundler\/loggingpolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/parchment\/loggerbundler\/loggingpolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/parchment\/loggerbundler\/loggingpolicy","title":"LoggerBundler.LoggingPolicy","type":"enum"}],"path":"\/documentation\/parchment\/loggerbundler","title":"LoggerBundler","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/bufferflowcontroller\/input(_:with:)","title":"func input<T>([Payload], with: T) async throws","type":"method"},{"path":"\/documentation\/parchment\/bufferflowcontroller\/output(with:)","title":"func output<T>(with: T) async -> AsyncThrowingStream<[Payload], Error>","type":"method"}],"path":"\/documentation\/parchment\/bufferflowcontroller","title":"BufferFlowController","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/logbuffer\/count()","title":"func count() async throws -> Int","type":"method"},{"path":"\/documentation\/parchment\/logbuffer\/dequeue(limit:)","title":"func dequeue(limit: Int?) async throws -> [Payload]","type":"method"},{"path":"\/documentation\/parchment\/logbuffer\/enqueue(_:)","title":"func enqueue([Payload]) async throws","type":"method"},{"path":"\/documentation\/parchment\/logbuffer\/load()","title":"func load() async throws -> [Payload]","type":"method"}],"path":"\/documentation\/parchment\/logbuffer","title":"LogBuffer","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggable\/eventname","title":"var eventName: String","type":"property"},{"path":"\/documentation\/parchment\/loggable\/parameters","title":"var parameters: [String : Sendable]","type":"property"}],"path":"\/documentation\/parchment\/loggable","title":"Loggable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggercomponent\/send(_:)","title":"func send([LoggerSendable]) async -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggercomponent\/id","title":"static var id: LoggerComponentID","type":"property"}],"path":"\/documentation\/parchment\/loggercomponent","title":"LoggerComponent","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggersendable\/event","title":"var event: Loggable","type":"property"},{"path":"\/documentation\/parchment\/loggersendable\/timestamp","title":"var timestamp: Date","type":"property"}],"path":"\/documentation\/parchment\/loggersendable","title":"LoggerSendable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/mutation\/transform(_:id:)","title":"func transform(Loggable, id: LoggerComponentID) -> AnyLoggable","type":"method"}],"path":"\/documentation\/parchment\/mutation","title":"Mutation","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/anyloggable\/init(_:)","title":"init(Loggable)","type":"init"},{"path":"\/documentation\/parchment\/anyloggable\/init(eventname:parameters:)","title":"init(eventName: String, parameters: [String : Sendable])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/anyloggable\/base","title":"let base: (Loggable)?","type":"property"},{"path":"\/documentation\/parchment\/anyloggable\/eventname","title":"var eventName: String","type":"property"},{"path":"\/documentation\/parchment\/anyloggable\/parameters","title":"var parameters: [String : Sendable]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/anyloggable\/isbased(_:)","title":"func isBased<T>(T.Type) -> Bool","type":"method"}],"path":"\/documentation\/parchment\/anyloggable","title":"AnyLoggable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/debuglogger\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/debuglogger\/send(_:)","title":"func send([LoggerSendable]) async -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/debuglogger\/id","title":"static let id: LoggerComponentID","type":"property"}],"path":"\/documentation\/parchment\/debuglogger","title":"DebugLogger","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/impletionevent\/eventname","title":"var eventName: String","type":"property"},{"path":"\/documentation\/parchment\/impletionevent\/parameters","title":"var parameters: [String : Sendable]","type":"property"}],"path":"\/documentation\/parchment\/impletionevent","title":"ImpletionEvent","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggercomponentid\/init(_:)","title":"init(String)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggercomponentid\/debug","title":"static var debug: LoggerComponentID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggercomponentid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/parchment\/loggercomponentid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/parchment\/loggercomponentid","title":"LoggerComponentID","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/==(_:_:)","title":"static func == (Payload, Payload) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/init(id:destination:event:timestamp:)","title":"init(id: String, destination: String, event: Loggable, timestamp: Date)","type":"init"},{"path":"\/documentation\/parchment\/payload\/init(id:destination:eventname:parameters:timestamp:)","title":"init(id: String, destination: String, eventName: String, parameters: [String : Sendable], timestamp: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/destination","title":"let destination: String","type":"property"},{"path":"\/documentation\/parchment\/payload\/eventname","title":"let eventName: String","type":"property"},{"path":"\/documentation\/parchment\/payload\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/parchment\/payload\/parameters","title":"let parameters: [String : Sendable]","type":"property"},{"path":"\/documentation\/parchment\/payload\/timestamp","title":"let timestamp: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/parchment\/payload\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/parchment\/payload\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/parchment\/payload\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/payload\/event","title":"var event: Loggable","type":"property"}],"path":"\/documentation\/parchment\/payload\/loggersendable-implementations","title":"LoggerSendable Implementations","type":"symbol"}],"path":"\/documentation\/parchment\/payload","title":"Payload","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/parchment\/tracked\/init(wrappedvalue:name:with:option:)","title":"init(wrappedValue: Value, name: String, with: LoggerBundler, option: LoggerBundler.LoggingOption)","type":"init"},{"path":"\/documentation\/parchment\/tracked\/init(wrappedvalue:name:with:scope:option:)","title":"init(wrappedValue: Value, name: String, with: LoggerBundler, scope: KeyPath<Value, ScopeValue>?, option: LoggerBundler.LoggingOption)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/parchment\/tracked\/wrappedvalue","title":"var wrappedValue: Value","type":"property"}],"path":"\/documentation\/parchment\/tracked","title":"Tracked","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/parchment\/loggabledictonary","title":"LoggableDictonary","type":"typealias"},{"path":"\/documentation\/parchment\/trackingevent","title":"TrackingEvent","type":"typealias"}],"path":"\/documentation\/parchment","title":"Parchment","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}